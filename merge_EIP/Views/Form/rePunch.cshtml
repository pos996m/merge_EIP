@model merge_EIP.Models.rePunchin

@{
    ViewBag.Title = "補卡申請表";
}

<div class="container p-33">

    <br />
    <h2>補卡申請表</h2>
    <hr />


    @using (Html.BeginForm())
    {
        @Html.AntiForgeryToken()
        <div class="row">
            <div class="col-12 col-xl-6">
                <div class="form-horizontal">

                    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                    <div class="form-group">
                        @Html.LabelFor(model => model.employeeID, "employeeID", htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Session["ID"]
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.employeeName, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Session["Name"]
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.repunchdate, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.repunchdate, new { htmlAttributes = new { @class = "form-control", type = "date" } })
                            @Html.ValidationMessageFor(model => model.repunchdate, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.repunchTimeIn, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.repunchTimeIn, new { htmlAttributes = new { @class = "form-control", type = "time" } })
                            @Html.ValidationMessageFor(model => model.repunchTimeIn, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.repunchTimeOut, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.repunchTimeOut, new { htmlAttributes = new { @class = "form-control", type = "time" } })
                            @Html.ValidationMessageFor(model => model.repunchTimeOut, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>
            </div>
            <div class="col-12 col-xl-6">
                <div class="form-group">
                    @Html.LabelFor(model => model.Reason, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.Reason, new { htmlAttributes = new { @class = "form-control", rows = "5", maxlength = "200" } })
                        @Html.ValidationMessageFor(model => model.Reason, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>
        </div>
        <br>
        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="申請" class="btn FileUpBtn float-right" />
            </div>
        </div>

    }

    <br>
    <br>
    <br>
    <br>
</div>