@model merge_EIP.Models.Employee

@{
    ViewBag.Title = "修改密碼";
}

<style>
    .row {
        justify-content: center;
    }

    input[type="password"] {
        width: 280px;
    }
</style>

<div class="container">
    <br />
    <div class="row">
        @using (Html.BeginForm())
        {
            @Html.AntiForgeryToken()
            <h2 class="font-weight-bold">修改密碼</h2>
            <div class="form-horizontal">
                <hr />
                @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                @Html.HiddenFor(model => model.employeeID)

                <div class="form-group">
                    @Html.Label("舊密碼", new { @for = "Password" }) :
                    <div class="col-md-10">
                        @Html.Password("Password", null, new { @class = "form-control text-box single-line" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.Label("新密碼", new { @for = "newPassword" }) :
                    <div class="col-md-10">
                        @Html.Password("newPassword", null, new { @class = "form-control text-box single-line" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.Label("確認密碼", new { @for = "Confirmpwd" }) :
                    <div class="col-md-10">
                        @Html.Password("Confirmpwd", null, new { @class = "form-control text-box single-line" })
                    </div>
                </div>
            </div>

            <div class="form-group">
                <br />
                <div class="col-md-offset-2 col-md-10 m-1">
                    <input type="submit" value="確認" class="btn btn-FB " onclick="return pswchack();" />
                    @Html.ActionLink("取消", "Index", new { }, new { @class = "btn btn-secondary" })
                </div>
            </div>
        }
    </div>
</div>

@*@Html.Raw(TempData["msg"])*@
<script>
    function pswchack() {
        const Password = $("#Password").val();
        const newPassword = $("#newPassword").val();
        const Confirmpwd = $("#Confirmpwd").val();
        if (Password != "" || newPassword != "" || Confirmpwd != "") {
            if (newPassword != Confirmpwd) {
                Swal.fire({
                    heightAuto: false,
                    title: "修改失敗",
                    text: "確認密碼不一致",
                    icon: "error"
                })
            }
            return newPassword == Confirmpwd;
        } else {
            Swal.fire({
                heightAuto: false,
                title: "修改失敗",
                text: "輸入不可為空",
                icon: "error"
            })
        }
        return false;
    }
</script>

@if (ViewBag.msg == "失敗")
{
    <script>
        Swal.fire({
            heightAuto: false,
            title: "修改失敗",
            text: "原密碼錯誤",
            icon: "error"
        })
    </script>
    ViewBag.msg = null;
}
else if (ViewBag.msg == "成功")
{
    <script>
        Swal.fire({
            heightAuto: false,
            title: "修改成功",
            text: "請重新登入",
            icon: "success"
        });
        setTimeout(() => {
            document.location.href = "/Login/Logout";
        },1000)
    </script>
    ViewBag.msg = null;
}


