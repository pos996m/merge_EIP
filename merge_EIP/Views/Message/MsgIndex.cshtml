
@{
    ViewBag.Title = "留言板";
}

@using PagedList
@using PagedList.Mvc

@model IPagedList<merge_EIP.Models.messageBoard>
<link href="~/Content/Tooltip.css" rel="stylesheet" />
<link href="~/Content/PagedList.css" rel="stylesheet" />
<style>
    .pagination {
        margin: 0 0 1rem 0;
    }

    .bg-lightblue {
        @*background-color: #dcebf8;*@
        background-color: rgb(65 139 202/0.7);
        @*background-color: var(--mainColor);*@
    }

    .bg-lightgreen {
        @*background-color: #ebfce8;*@
        background-color: rgb(28 176 154/0.7);
    }

    .bg-lightred {
        @*background-color: #fbe8e8;*@
        background-color: rgb(217 84 79/0.7);
    }

    .swal2-popup {
        width: 20rem;
    }

    .swal2-html-container {
        text-align: initial;
    }

    .head-text-color {
        @*color: dimgrey !important;*@
        color: rgb(255 255 255/0.85) !important;
    }
</style>


<div class="container custom-gutters p-4">
    <br />
    <h2>留言板</h2>

    <div style="margin:0 0 1rem 0">
        @using (Html.BeginForm())
        {
            <a href="/Message/Fnewmsg" class="btn btn-FB m-1">新增留言</a>
            <a class="btn btn-FB m-1" data-toggle="collapse" href="#collapseExample" role="button" aria-expanded="false" aria-controls="collapseExample">
                顯示搜尋選單
            </a>
            <a href="/Message/MsgIndex" class="btn btn-FB m-1" title="刷新"><i class="fas fa-redo-alt" title="刷新"></i></a>
            <div class="collapse" id="collapseExample">
                <input class="col-6 col-md-2 m-1" type="text" id="getName" name="getName" placeholder="查詢發布者" />
                <input class="col-6 col-md-2 m-1" type="text" id="getText" name="getText" placeholder="查詢內文" />
                <input class="col-8 col-md-2 m-1" type="date" id="getTime" name="getTime" placeholder="查詢發布時間" />
                <select id="getState" name="getState" class="form-control m-1 p-1 col-4 col-md-1 h-auto" style="display:inline-block">
                    <option value="全部" id="getState">全部</option>
                    <option value="所有人">所有人</option>
                    <option value="主管">主管</option>
                    <option value="部門">部門</option>
                    <option value="私人">私人</option>
                </select>
                <button type="button" class="btn btn-FB m-1" onclick="onSelect()">搜尋</button>
                @*<a href="/Message/MsgIndex" class="btn btn-FB m-1">搜尋</a>*@
            </div>
        }
    </div>
    @{
        string thisEID = Convert.ToString(Session["ID"]);
        string thisPosID = Convert.ToString(Session["PosID"]);
    }

    <div class="row">
        @foreach (var item in Model)
        {
            string allColor = "";
            if (item.State == "所有人")
            {
                allColor = "bg-lightblue";
            }
            else if (item.State == "部門")
            {
                allColor = "bg-lightgreen";
            }
            else
            {
                allColor = "bg-lightred";
            }

            <div class="col-12 col-md-6 col-lg-3 p-2" >
                <div class="card mb-3 shadow-sm ">
                    <div class="card-header @allColor" style="color:white" title="發布時間 : @item.messageDate">
                        <div class="float-right">
                            @if (item.goTop)
                            {
                                <i class="fas fa-level-up-alt head-text-color w3s-tooltip"><span class="w3s-tooltiptext">留言置頂</span></i>
                            }
                            @if (item.toCalendar)
                            {
                                <i class="far fa-calendar-alt head-text-color w3s-tooltip" style="margin:0rem 0rem 0rem 0.5rem">
                                    <span class="w3s-tooltiptext">指派至行事曆</span>
                                </i>
                            }
                        </div>
                        <div class="h5 m-0" style="font-weight: bold">

                            @Html.DisplayFor(modelItem => item.Employee.Department.departmentName)@Html.DisplayFor(modelItem => item.Employee.Position.positionName)
                            @Html.DisplayFor(modelItem => item.Employee.Name)
                        </div>
                        <div>
                            給:
                            @if (item.State == "私人")
                            {
                                @Html.DisplayFor(modelItem => item.Employee1.Name) <span>(私人)</span>
                            }
                            else if (item.State == "部門")
                            {
                                @Html.DisplayFor(modelItem => item.Department.departmentName) @Html.DisplayFor(modelItem => item.State)
                            }
                            else
                            {
                                @Html.DisplayFor(modelItem => item.State)
                            }
                        </div>
                        @*<small class="text-muted m-0">發布時間: @Html.DisplayFor(modelItem => item.messageDate)</small><br>*@
                        <small class="text-muted m-0 head-text-color">
                            @if (item.toMsgDate != null)
                            {
                                <span>指派時間: @Html.DisplayFor(modelItem => item.toMsgDate)</span>
                            }
                            else
                            {
                                <span>指派時間: 無</span>
                            }
                        </small>
                    </div>
                    <div class="card-body ">
                        @*text-primary*@
                        <h6 class="card-title" style="font-weight: 600">@Html.DisplayFor(modelItem => item.messageTitle)</h6>
                        <p class="card-text">
                            @Html.DisplayFor(modelItem => item.messageText)
                        </p>

                    </div>
                    <div class="card-footer">
                        <small class="text-muted">
                            @{
                                int watchcnt = item.watchCount.Where(x => x.messageboardNumber == item.messageboardNumber && x.watchState == true).ToList().Count;
                                int allwatchcnt = item.watchCount.Where(x => x.messageboardNumber == item.messageboardNumber).ToList().Count;
                            }
                            @if (thisPosID == "0")
                            {
                                <a href="" data-msgnum="@item.messageboardNumber" data-msgstate="@item.State" class="float-left" onclick="watchCheck(event); return false">
                                    @if (watchcnt == allwatchcnt)
                                    {
                                        @:全部
                                    }
                                    else
                                    {
                                        @watchcnt
                                    }
                                    人已確認
                                </a>
                            }
                            else
                            {
                                <span>
                                    @if (watchcnt == allwatchcnt)
                                    {
                                        <b>全部</b>
                                    }
                                    else
                                    {
                                        <b>@watchcnt</b>
                                    }
                                    人已確認
                                </span>
                            }
                            @{
                                var checkMsg = item.watchCount.Where(x => x.messageboardNumber == item.messageboardNumber && x.employeeID == thisEID).FirstOrDefault();
                                if (checkMsg != null)
                                {
                                    if (checkMsg.watchState != true || checkMsg.employeeID != thisEID)
                                    {
                                        <a href="" onclick="checkMsg(event, '@item.messageboardNumber')" class="float-right" style="margin:0rem 0rem 0rem 1rem">確認</a>
                                    }
                                }
                            }
                            @if (item.employeeID == thisEID)
                            {
                                @Html.ActionLink("編輯貼文", "Setmsg", new { id = item.messageboardNumber }, new { @class = "float-right" })
                            }
                        </small>
                    </div>
                </div>
            </div>
        }
    </div>
    @Html.PagedListPager(Model, page => Url.Action("MsgIndex", new { page }))
</div>

<br>
<br>
<br>

<script>
    function onSelect(e) {
        const getName = $("#getName").val();
        const getText = $("#getText").val();
        const getTime = $("#getTime").val();
        const getState = $("#getState").val();
        if (getState == "全部" && getName == "" && getText == "" && getTime == "") {
            document.location.href = "/Message/MsgIndex";
        } else {
            document.location.href = "/Message/MsgIndex" + `?getName=${getName}&getText=${getText}&getTime=${getTime}&getState=${getState}`;
        }
    }

    function checkMsg(e, num) {
        let checkHref = document.location.href;
        if (checkHref.indexOf("?") < 0) {
            document.location.href = "/Message/Check" + `?num=${num}`;
        } else {
            let newCheck = checkHref.substring(checkHref.indexOf("?"), checkHref.length);
            console.log(newCheck)
            document.location.href = "/Message/Check" + `${newCheck}&num=${num}`;
        }
    }

    function watchCheck(e) {
        const msgnum = e.target.getAttribute("data-msgnum");
        const msgstate = e.target.getAttribute("data-msgstate");
        let trueList = [];
        let falseList = [];

        const xhttp = new XMLHttpRequest();
        xhttp.open("GET", "/api/MsgCheckAPI" + encodeURI(`?num=${msgnum}&state=${msgstate}`), true);
        xhttp.send();
        // 要取得JSON要等他load完才拿得到
        xhttp.onload = () => {
            // 解析API回傳JSON
            dataShow = JSON.parse(xhttp.responseText);
            console.log(dataShow);

            // 將已讀未讀放入List
            for (var i = 0; i < dataShow.length; i++) {
                if (dataShow[i].watchState == true) {
                    trueList.push(dataShow[i].employeeName);
                } else {
                    falseList.push(dataShow[i].employeeName);
                }
            }

            // 建立顯示html字串
            let Liststr = "<h4>未確認</h4><ul>";
            for (var i = 0; i < falseList.length; i++) {
                Liststr += `<li>${falseList[i]}</li>`
            }
            Liststr += "</ul><h4>已確認</h4><ul>"
            for (var i = 0; i < trueList.length; i++) {
                Liststr += `<li>${trueList[i]}</li>`
            }
            Liststr += "</ul>"

            // 顯示
            Swal.fire({
                html: Liststr,
            })
        }
    }

    const mylist = $(".pagination");
    mylist.click((e) => {
        console.log(e.target.innerHTML);
        console.log(e.target.getAttribute("href"));
        if (e.target.getAttribute("href") == null) {
            return false;
        }

        let myhref = document.location.href;
        console.log(myhref);
        if (myhref.indexOf("page=") < 0) {
            if (myhref.indexOf("?") < 0) {
                document.location.href = myhref + `?page=${e.target.getAttribute("href").charAt(e.target.getAttribute("href").length - 1)}`;
            } else {
                document.location.href = myhref + `&page=${e.target.getAttribute("href").charAt(e.target.getAttribute("href").length - 1)}`;
            }
        } else {
            if (myhref.indexOf("&") < 0) {
                let Nmh = myhref.substring(myhref.lastIndexOf("?"), myhref - myhref.lastIndexOf("?"))
                document.location.href = Nmh + `?page=${e.target.getAttribute("href").charAt(e.target.getAttribute("href").length - 1)}`;
            } else {
                console.log(myhref.substring(myhref.lastIndexOf("&"), myhref - myhref.lastIndexOf("&")))
                let Nmh = myhref.substring(myhref.lastIndexOf("&"), myhref - myhref.lastIndexOf("&"))
                document.location.href = Nmh + `&page=${e.target.getAttribute("href").charAt(e.target.getAttribute("href").length - 1)}`;
            }
        }
        return false;
    })

</script>


@*<div>
        <label class="control-label col-md-2" for="messageText">指定時間(選填)</label>
        <input type="datetime-local" class="form-control text-box single-line" id="toMsgDate" name="toMsgDate" />
    </div>
    <div>
        <label class="control-label col-md-2" for="messageText">內文</label>
        <textarea class="form-control text-box single-line" id="messageText" name="messageText"></textarea>
    </div>

    <div>
        <select id="fType" name="State" class="form-control col-4 col-md-2" style="display:inline-block">
            <option value="所有人" name="State" id="fType">所有人</option>
            <option value="部門">部門</option>
            <option value="指定人">指定人</option>
        </select>
    </div>
    <div>
        <label class="control-label col-md-2" for="messageText">指定員工編號</label>
        <input type="datetime-local" class="form-control text-box single-line" id="toMsgDate" name="toMsgDate" />
    </div>*@